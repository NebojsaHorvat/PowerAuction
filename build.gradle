buildscript {
    Properties constants = new Properties()
    file("$projectDir/constants.properties").withInputStream { constants.load(it) }

    ext {
        corda_release_group = constants.getProperty("cordaReleaseGroup")
        corda_release_version = constants.getProperty("cordaVersion")
        corda_core_release_group =  constants.getProperty("cordaCoreReleaseGroup")
        corda_core_release_version = constants.getProperty("cordaCoreVersion")
        corda_gradle_plugins_version = constants.getProperty("gradlePluginsVersion")
        junit_version = constants.getProperty("junitVersion")
        quasar_version = constants.getProperty("quasarVersion")
        log4j_version = constants.getProperty("log4jVersion")
        slf4j_version = constants.getProperty("slf4jVersion")
        corda_platform_version = constants.getProperty("platformVersion").toInteger()
        spring_boot_version = '2.0.2.RELEASE'
        spring_boot_gradle_plugin_version = '2.0.2.RELEASE'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url 'https://software.r3.com/artifactory/corda' }
    }

    dependencies {
        classpath "net.corda.plugins:cordapp:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:cordformation:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:quasar-utils:$corda_gradle_plugins_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_gradle_plugin_version"
    }
}

allprojects {
    apply plugin: 'java'

    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
        maven { url 'https://software.r3.com/artifactory/corda' }
        maven { url 'https://jitpack.io' }
        maven { url 'https://repo.gradle.org/gradle/libs-releases' }
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs << "-parameters" // Required by Corda's serialisation framework.
    }

    jar {
        // This makes the JAR's SHA-256 hash repeatable.
        preserveFileTimestamps = false
        reproducibleFileOrder = true
    }
}


apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'

sourceSets {
    main {
        resources {
            srcDir rootProject.file("config/dev")
        }
    }
}

dependencies {
    testCompile "junit:junit:$junit_version"

    // Corda dependencies.
    cordaCompile "$corda_core_release_group:corda-core:$corda_core_release_version"
    cordaCompile "$corda_release_group:corda-node-api:$corda_release_version"
    cordaCompile "$corda_release_group:corda-finance-contracts:$corda_release_version"
    cordaCompile "$corda_release_group:corda-finance-workflows:$corda_release_version"
    cordaRuntime "$corda_release_group:corda:$corda_release_version"

    // CorDapp dependencies.
    cordapp("$corda_release_group:corda-finance-contracts:$corda_release_version")
    cordapp("$corda_release_group:corda-finance-workflows:$corda_release_version")
    cordapp project(":workflows")
    cordapp project(":contracts")

    cordaCompile "org.apache.logging.log4j:log4j-slf4j-impl:${log4j_version}"
    cordaCompile "org.apache.logging.log4j:log4j-web:${log4j_version}"
    cordaCompile "org.slf4j:jul-to-slf4j:$slf4j_version"
}

////////////////////////////////////////////// local ->

// task deployNodes(type: net.corda.plugins.Cordform, dependsOn: ['jar']) {
//     nodeDefaults {
//         projectCordapp {
//             deploy = false
//         }
//         cordapp("$corda_release_group:corda-finance-contracts:$corda_release_version")
//         cordapp("$corda_release_group:corda-finance-workflows:$corda_release_version")
//         cordapp project(':contracts')
//         cordapp project(':workflows')
// 	runSchemaMigration = true
//     }
//     node {
//         name "O=Notary,L=London,C=GB"
//         notary = [validating : false]
//         p2pPort 10002
//         rpcSettings {
//             address("localhost:10003")
//             adminAddress("localhost:10043")
//         }
//         cordapps.clear()
//     }
//     node {
//         name "O=PowerCompany,L=Paris,C=FR"
//         p2pPort 10005
//         rpcSettings {
//             address("localhost:10006")
//             adminAddress("localhost:10046")
//         }
//         rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
//         extraConfig = ['h2Settings.address' : 'localhost:20041']
//     }
//     node {
//         name "O=Prosumer,L=New York,C=US"
//         p2pPort 10008
//         rpcSettings {
//             address("localhost:10009")
//             adminAddress("localhost:10049")
//         }
//         rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
//         extraConfig = ['h2Settings.address' : 'localhost:20042']
//     }
//     node {
//         name "O=Customer,L=Sydney,C=AU"
//         p2pPort 10011
//         rpcSettings {
//             address("localhost:10012")
//             adminAddress("localhost:10052")
//         }
//         rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
//         extraConfig = ['h2Settings.address' : 'localhost:20043']
//     }
//     node {
//         name "O=Producer,L=Paris,C=FR"
//         p2pPort 10014
//         rpcSettings {
//             address("localhost:10015")
//             adminAddress("localhost:10055")
//         }
//         rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
//         extraConfig = ['h2Settings.address' : 'localhost:20044']
//     }
//     node {
//         name "O=GridAuthority,L=Paris,C=FR"
//         p2pPort 10017
//         rpcSettings {
//             address("localhost:10018")
//             adminAddress("localhost:10058")
//         }
//         rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
//         extraConfig = ['h2Settings.address' : 'localhost:20047']
//     }
// }

////////////////////////////////////////////// remote ->

task deployNodes(type: net.corda.plugins.Cordform, dependsOn: ['jar']) {
    nodeDefaults {
        projectCordapp {
            deploy = false
        }
        cordapp("$corda_release_group:corda-finance-contracts:$corda_release_version")
        cordapp("$corda_release_group:corda-finance-workflows:$corda_release_version")
        cordapp project(':contracts')
        cordapp project(':workflows')
	runSchemaMigration = true
    }

    // omega
    node {
        name "O=Notary,L=London,C=GB"
        notary = [validating : false]   
        p2pPort 10002
        p2pAddress "192.168.88.252:10002"
        rpcSettings {
            address("0.0.0.0:10003")
            adminAddress("0.0.0.0:10043")
        }
        projectCordapp {
            deploy = false
        }
        cordapps.clear()
        sshdPort 2222
    }

    // omega
    node {
        name "O=PowerCompany,L=Paris,C=FR"
        p2pPort 10005
        p2pAddress "192.168.88.252:10005"
        rpcSettings {
            address("0.0.0.0:10006")
            adminAddress("0.0.0.0:10046")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
        // extraConfig = ['h2Settings.address' : '0.0.0.0:20041']
        sshdPort 2224
    }

    // alfa
    node {
        name "O=Prosumer,L=New York,C=US"
        p2pPort 10008
        p2pAddress "192.168.88.251:10008"
        rpcSettings {
            address("0.0.0.0:10009")
            adminAddress("0.0.0.0:10049")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
        // extraConfig = ['h2Settings.address' : '0.0.0.0:20042']
        sshdPort 2225
    }

    // beta
    node {
        name "O=Customer,L=Sydney,C=AU"
        p2pPort 10011
        p2pAddress "192.168.88.249:10011"
        rpcSettings {
            address("0.0.0.0:10012")
            adminAddress("0.0.0.0:10052")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
        // extraConfig = ['h2Settings.address' : '0.0.0.0:20043']
        sshdPort 2226
    }

    // beta
    node {
        name "O=Producer,L=Paris,C=FR"
        p2pPort 10014
        p2pAddress "192.168.88.249:10014"
        rpcSettings {
            address("0.0.0.0:10015")
            adminAddress("0.0.0.0:10055")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
        // extraConfig = ['h2Settings.address' : '0.0.0.0:20044']
        sshdPort 2227
    }

    // gama
    node {
        name "O=GridAuthority,L=Paris,C=FR"
        p2pPort 10017
        p2pAddress "192.168.88.250:10017"
        rpcSettings {
            address("0.0.0.0:10018")
            adminAddress("0.0.0.0:10058")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
        // extraConfig = ['h2Settings.address' : '0.0.0.0:20047']
        sshdPort 2228
    }

    /////////////////////////  New nodes auto-exp-1

    // alfa
    node {
        name "O=Producer1,L=Paris,C=FR"
        p2pPort 10020
        p2pAddress "192.168.88.251:10020"
        rpcSettings {
            address("0.0.0.0:10021")
            adminAddress("0.0.0.0:10061")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
        // extraConfig = ['h2Settings.address' : 'localhost:20050']
    }
    // gama
    node {
        name "O=Customer1,L=Sydney,C=AU"
        p2pPort 10023
        p2pAddress "192.168.88.250:10023"
        rpcSettings {
            address("0.0.0.0:10024")
            adminAddress("0.0.0.0:10064")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
        // extraConfig = ['h2Settings.address' : 'localhost:20054']
    }

    /////////////////////////  New nodes auto-exp-2

    // omega
    node {
        name "O=Producer2,L=Paris,C=FR"
        p2pPort 10026
        p2pAddress "192.168.88.252:10026"
        rpcSettings {
            address("0.0.0.0:10027")
            adminAddress("0.0.0.0:10067")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
        // extraConfig = ['h2Settings.address' : 'localhost:20057']
    }

    // beta
    node {
        name "O=Customer2,L=Sydney,C=AU"
        p2pPort 10029
        p2pAddress "192.168.88.249:10029"
        rpcSettings {
            address("0.0.0.0:10030")
            adminAddress("0.0.0.0:10070")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
        // extraConfig = ['h2Settings.address' : 'localhost:20060']
    }

    /////////////////////////  New nodes auto-exp-3

    // omega
    node {
        name "O=Prosumer1,L=Sydney,C=AU"
        p2pPort 10032
        p2pAddress "192.168.88.252:10032"
        rpcSettings {
            address("0.0.0.0:10033")
            adminAddress("0.0.0.0:10073")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
        // extraConfig = ['h2Settings.address' : 'localhost:20060']
    }

     // alfa
    node {
        name "O=Prosumer2,L=Sydney,C=AU"
        p2pPort 10035
        p2pAddress "192.168.88.251:10035"
        rpcSettings {
            address("0.0.0.0:10036")
            adminAddress("0.0.0.0:10076")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
        // extraConfig = ['h2Settings.address' : 'localhost:20060']
    }

     // beta
    node {
        name "O=Prosumer3,L=Sydney,C=AU"
        p2pPort 10038
        p2pAddress "192.168.88.249:10038"
        rpcSettings {
            address("0.0.0.0:10039")
            adminAddress("0.0.0.0:10079")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
        // extraConfig = ['h2Settings.address' : 'localhost:20060']
    }

     // gama
    node {
        name "O=Prosumer4,L=Sydney,C=AU"
        p2pPort 10041
        p2pAddress "192.168.88.250:10041"
        rpcSettings {
            address("0.0.0.0:10042")
            adminAddress("0.0.0.0:10082")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
        // extraConfig = ['h2Settings.address' : 'localhost:20060']
    }

     // gama
    node {
        name "O=Prosumer5,L=Sydney,C=AU"
        p2pPort 10044
        p2pAddress "192.168.88.250:10044"
        rpcSettings {
            address("0.0.0.0:10045")
            adminAddress("0.0.0.0:10085")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
        // extraConfig = ['h2Settings.address' : 'localhost:20060']
    }

    /////////////////////////  New nodes auto-exp-4

    // omega
    node {
        name "O=Customer3,L=Sydney,C=AU"
        p2pPort 10047
        p2pAddress "192.168.88.252:10047"
        rpcSettings {
            address("0.0.0.0:10048")
            adminAddress("0.0.0.0:10088")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
        // extraConfig = ['h2Settings.address' : 'localhost:20060']
    }

    // alfa
    node {
        name "O=Customer4,L=Sydney,C=AU"
        p2pPort 10050
        p2pAddress "192.168.88.251:10050"
        rpcSettings {
            address("0.0.0.0:10051")
            adminAddress("0.0.0.0:10091")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
        // extraConfig = ['h2Settings.address' : 'localhost:20060']
    }

    // alfa
    node {
        name "O=Customer5,L=Sydney,C=AU"
        p2pPort 10053
        p2pAddress "192.168.88.251:10053"
        rpcSettings {
            address("0.0.0.0:10054")
            adminAddress("0.0.0.0:10094")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
        // extraConfig = ['h2Settings.address' : 'localhost:20060']
    }


    // beta
    node {
        name "O=Customer6,L=Sydney,C=AU"
        p2pPort 10056
        p2pAddress "192.168.88.249:10056"
        rpcSettings {
            address("0.0.0.0:10057")
            adminAddress("0.0.0.0:10097")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
        // extraConfig = ['h2Settings.address' : 'localhost:20060']
    }

    // gama
    node {
        name "O=Customer7,L=Sydney,C=AU"
        p2pPort 10059
        p2pAddress "192.168.88.250:10059"
        rpcSettings {
            address("0.0.0.0:10060")
            adminAddress("0.0.0.0:10100")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
        // extraConfig = ['h2Settings.address' : 'localhost:20060']
    }

    /////////////////////////  New nodes auto-exp-5

     // omega
    node {
        name "O=Producer3,L=Paris,C=FR"
        p2pPort 10062
        p2pAddress "192.168.88.252:10062"
        rpcSettings {
            address("0.0.0.0:10063")
            adminAddress("0.0.0.0:10103")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
        // extraConfig = ['h2Settings.address' : 'localhost:20060']
    }

   
    // omega
    node {
        name "O=Producer4,L=Paris,C=FR"
        p2pPort 10065
        p2pAddress "192.168.88.252:10065"
        rpcSettings {
            address("0.0.0.0:10066")
            adminAddress("0.0.0.0:10106")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
        // extraConfig = ['h2Settings.address' : 'localhost:20060']
    }

    // omega
    node {
        name "O=Producer5,L=Paris,C=FR"
        p2pPort 10068
        p2pAddress "192.168.88.252:10068"
        rpcSettings {
            address("0.0.0.0:10069")
            adminAddress("0.0.0.0:10109")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
        // extraConfig = ['h2Settings.address' : 'localhost:20060']
    }

    // alfa
    node {
        name "O=Prosumer6,L=Sydney,C=AU"
        p2pPort 10071
        p2pAddress "192.168.88.251:10071"
        rpcSettings {
            address("0.0.0.0:10072")
            adminAddress("0.0.0.0:10112")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
        // extraConfig = ['h2Settings.address' : 'localhost:20060']
    }

    // alfa
    node {
        name "O=Prosumer7,L=Sydney,C=AU"
        p2pPort 10074
        p2pAddress "192.168.88.251:10074"
        rpcSettings {
            address("0.0.0.0:10075")
            adminAddress("0.0.0.0:10115")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
        // extraConfig = ['h2Settings.address' : 'localhost:20060']
    }

    // alfa
    node {
        name "O=Prosumer8,L=Sydney,C=AU"
        p2pPort 10077
        p2pAddress "192.168.88.251:10077"
        rpcSettings {
            address("0.0.0.0:10078")
            adminAddress("0.0.0.0:10118")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
        // extraConfig = ['h2Settings.address' : 'localhost:20060']
    }

    // beta
    node {
        name "O=Customer8,L=Sydney,C=AU"
        p2pPort 10080
        p2pAddress "192.168.88.249:10080"
        rpcSettings {
            address("0.0.0.0:10081")
            adminAddress("0.0.0.0:10121")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
        // extraConfig = ['h2Settings.address' : 'localhost:20060']
    }

    // beta
    node {
        name "O=Customer9,L=Sydney,C=AU"
        p2pPort 10083
        p2pAddress "192.168.88.249:10083"
        rpcSettings {
            address("0.0.0.0:10084")
            adminAddress("0.0.0.0:10124")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
        // extraConfig = ['h2Settings.address' : 'localhost:20060']
    }

    // gama
    node {
        name "O=Customer10,L=Sydney,C=AU"
        p2pPort 10086
        p2pAddress "192.168.88.250:10086"
        rpcSettings {
            address("0.0.0.0:10087")
            adminAddress("0.0.0.0:10127")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
        // extraConfig = ['h2Settings.address' : 'localhost:20060']
    }

    // gama
    node {
        name "O=Customer11,L=Sydney,C=AU"
        p2pPort 10089
        p2pAddress "192.168.88.250:10089"
        rpcSettings {
            address("0.0.0.0:10090")
            adminAddress("0.0.0.0:10130")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
        // extraConfig = ['h2Settings.address' : 'localhost:20060']
    }
}

task installQuasar(type: Copy) {
    destinationDir rootProject.file("lib")
    from(configurations.quasar) {
        rename 'quasar-core(.*).jar', 'quasar.jar'
    }
}

// task prepareDockerNodes(type: net.corda.plugins.Dockerform, dependsOn: ['jar']) {
//     // set docker image for each node
//     dockerImage = "corda/corda-zulu-java1.8-4.8"

//     nodeDefaults {
//         projectCordapp {
//             deploy = false
//         }
//         cordapp("$corda_release_group:corda-finance-contracts:$corda_release_version")
//         cordapp("$corda_release_group:corda-finance-workflows:$corda_release_version")
//         cordapp project(':contracts')
//         cordapp project(':workflows')
//         runSchemaMigration = true
//     }

//     node {
//         name "O=Notary,L=London,C=GB"
//         notary = [validating : false]
//         p2pPort 10002
//         p2pAddress "192.168.88.252:10002"
//         rpcSettings {
//             address("0.0.0.0:10003")
//             adminAddress("0.0.0.0:10043")
//         }
//         projectCordapp {
//             deploy = false
//         }
//         cordapps.clear()
//         sshdPort 2222
//     }

//     node {
//         name "O=PowerCompany,L=Paris,C=FR"
//         p2pPort 10005
//         p2pAddress "192.168.88.252:10005"
//         rpcSettings {
//             address("0.0.0.0:10006")
//             adminAddress("0.0.0.0:10046")
//         }
//         rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
//         // extraConfig = ['h2Settings.address' : '0.0.0.0:20041']
//         sshdPort 2224
//     }
//     node {
//         name "O=Prosumer,L=New York,C=US"
//         p2pPort 10008
//         p2pAddress "192.168.88.251:10008"
//         rpcSettings {
//             address("0.0.0.0:10009")
//             adminAddress("0.0.0.0:10049")
//         }
//         rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
//         // extraConfig = ['h2Settings.address' : '0.0.0.0:20042']
//         sshdPort 2225
//     }
//     node {
//         name "O=Customer,L=Sydney,C=AU"
//         p2pPort 10011
//         p2pAddress "192.168.88.249:10011"
//         rpcSettings {
//             address("0.0.0.0:10012")
//             adminAddress("0.0.0.0:10052")
//         }
//         rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
//         // extraConfig = ['h2Settings.address' : '0.0.0.0:20043']
//         sshdPort 2226
//     }
//     node {
//         name "O=Producer,L=Paris,C=FR"
//         p2pPort 10014
//         p2pAddress "192.168.88.249:10014"
//         rpcSettings {
//             address("0.0.0.0:10015")
//             adminAddress("0.0.0.0:10055")
//         }
//         rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
//         // extraConfig = ['h2Settings.address' : '0.0.0.0:20044']
//         sshdPort 2227
//     }
//     node {
//         name "O=GridAuthority,L=Paris,C=FR"
//         p2pPort 10017
//         p2pAddress "192.168.88.250:10017"
//         rpcSettings {
//             address("0.0.0.0:10018")
//             adminAddress("0.0.0.0:10058")
//         }
//         rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
//         // extraConfig = ['h2Settings.address' : '0.0.0.0:20047']
//         sshdPort 2228
//     }

//     // This property needs to be outside the node {...} elements
//     dockerImage = "corda/corda-zulu-java1.8-4.8"
// }
