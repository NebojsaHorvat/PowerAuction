Copy data from remote host to local machine:
scp -r nebojsa@omega:/home/nebojsa/energies/project/auto-exp-0/performance_scripts_remote/data_backup .

Kill all java processes:
killall -9 java

Kill springBoot docker container if it stays alive after shutdown:
docker exec -it 4ceb1a5cdff0 sh
kill 1

Prikaz procesa po PID-u:
ps -Flww -p THE_PID

Gasenje procesa po PID-u:
kill -9 THE_PID

Kopiranje falova kroz SCP:
scp -r  ./* nebojsa@omega:~/energies/project/exp1
scp performance_scripts nebojsa@alfa:~/energies/project/exp0

Podesiti python okruzenje za skripte:
cd performance_scripts
sudo apt install python3.10-venv
python3 -m venv .
source ./bin/activate
pip install -r requirements.txt 

Pobrisati sve docker stvari:
docker volume prune
docker container prune

Obrisati staru ssh konekciju:
ssh-keygen -f "/home/nebojscd a/.ssh/known_hosts" -R "[localhost]:2222"

Ostvari ssh konekciju sa cvorom:
ssh -p 2222 localhost -l user1

Returns all parties currently visible on the network with their advertised services and an observable of future updates to the network:
run networkMapFeed

Node information:
run nodeInfo

Ugasi node:
run gracefulShutdown

Vidi sve registrovane flow-ove:
run registeredFlows

Dohvati states iz DREAM-a
run vaultQuery contractStateType: net.corda.samples.auction.states.PowerPromise
run vaultQuery contractStateType: net.corda.samples.auction.states.AuctionState
run vaultQuery contractStateType: net.corda.samples.auction.states.BidState
run vaultQuery contractStateType: net.corda.finance.contracts.asset.Cash$State


flow start CreatePowerPromiseFlow title: nesto, description: opis, imageURL: putanja, expires: 2023-08-04T10:11:30, powerSuppliedInKW: 11.11, powerSupplyDurationInMin: 30, lockedFundsDouble: 10.0

flow start CashIssueAndPaymentFlow amount: 10.0 USD,
                              val issueRef: OpaqueBytes,????
                              val recipient: Party,
                              val anonymous: Boolean,
                              val notary: Party




Testiranje bootCamp-a:

run vaultQuery contractStateType: bootcamp.TokenState
start TokenIssueFlowInitiator owner: PartyB, amount: 1000


Corda sample commands:S

flow start ExampleFlow$Initiator iouValue: 50, otherParty: "O=PartyB,L=New York,C=US"
run vaultQuery contractStateType: net.corda.samples.example.states.IOUState


Client requests from cluster server:
curl --noproxy '*' --request POST http://localhost:8085/api/auction/switch-party/producer

curl --noproxy '*' --request POST http://localhost:8085/api/auction/switch-party/customer


curl --noproxy '*' --request GET http://localhost:8085/api/auction/getCashBalance

curl --noproxy '*' --request GET http://localhost:8085/api/auction/asset/list

curl --noproxy '*' --header "Content-Type: application/json" \
  --request POST \
  --data '{"party":"producer","amount":"10000"}' \
  http://localhost:8085/api/auction/issueCash

curl --noproxy '*' --header "Content-Type: application/json" --request POST --data '{"party":"producer","amount":"10000"}' http://localhost:8085/api/auction/issueCash
  
curl --noproxy '*' --header "Content-Type: application/json" \
  --header "Accept: application/json" \
  --request POST \
  --data '{"powerSuppliedInKW":"101.0","deliveryTime":"17-08-2023 04:52:10 PM", "powerSupplyDurationInMin":"60.0"}' \
  http://localhost:8085/api/auction/asset/create


Place bid:
curl --noproxy '*' --header "Content-Type: application/json" \
  --header "Accept: application/json" \
  --request POST \
  --data '{"amount": "22", "auctionId": "6db39bf1-9a8c-4e4b-b4bd-01b50cd3f388"}' \
  http://localhost:8085/api/auction/placeBid